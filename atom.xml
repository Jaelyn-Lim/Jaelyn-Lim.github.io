<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jaelyn&#39;s Blog</title>
  
  <subtitle>jaelyn-lim</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jaelyn.coding.me/"/>
  <updated>2018-02-14T13:24:36.441Z</updated>
  <id>http://jaelyn.coding.me/</id>
  
  <author>
    <name>Jaelyn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django Rest framework + vue 笔记 01</title>
    <link href="http://jaelyn.coding.me/2018/02/14/django-rest-vue01/"/>
    <id>http://jaelyn.coding.me/2018/02/14/django-rest-vue01/</id>
    <published>2018-02-14T13:18:51.000Z</published>
    <updated>2018-02-14T13:24:36.441Z</updated>
    
    <content type="html"><![CDATA[<p>需要下载的资源</p><ul><li><a href="https://www.jetbrains.com/pycharm-edu/download/#section=mac" target="_blank" rel="noopener">Pycharm</a></li><li><a href="https://www.jetbrains.com/webstorm/download/#section=mac" target="_blank" rel="noopener">WebStorm</a></li><li><a href="http://nodejs.cn" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://www.mysql.com/products/workbench/" target="_blank" rel="noopener">Mysql Workbench</a></li></ul><a id="more"></a><h3 id="Pycharm-快捷启动（Linux）"><a href="#Pycharm-快捷启动（Linux）" class="headerlink" title="Pycharm 快捷启动（Linux）"></a>Pycharm 快捷启动（Linux）</h3><ol><li><code>vim ~/.bashrc</code></li><li><code>alias pycharm=&quot;bash /hom/bobby/Downloads/pycharm-2016.3.2/bin/pycharm.sh&quot;</code></li><li><code>source ~/.bashrc</code></li><li><code>pycharm</code></li></ol><h3 id="Mysql-管理工具"><a href="#Mysql-管理工具" class="headerlink" title="Mysql 管理工具"></a>Mysql 管理工具</h3><ul><li><a href="https://navicat.com/en" target="_blank" rel="noopener">Navicat</a></li><li><a href="https://www.mysql.com/products/workbench/" target="_blank" rel="noopener">Mysql Workbench</a></li></ul><h3 id="Mysql-安装（Linux）"><a href="#Mysql-安装（Linux）" class="headerlink" title="Mysql 安装（Linux）"></a>Mysql 安装（Linux）</h3><h4 id="获取安装包"><a href="#获取安装包" class="headerlink" title="获取安装包"></a>获取安装包</h4><p><code>sudo apt-get install mysql-server</code></p><h4 id="查看mysql的状态"><a href="#查看mysql的状态" class="headerlink" title="查看mysql的状态"></a>查看mysql的状态</h4><p><code>ps aux|grep mysqld</code></p><blockquote><p>看是否有启动成功，并且可以查看端口地址</p></blockquote><h4 id="进入mysql-shell中"><a href="#进入mysql-shell中" class="headerlink" title="进入mysql shell中"></a>进入mysql shell中</h4><p><code>mysql -uroot -p</code> </p><blockquote><p>之后输入登录密码</p></blockquote><h4 id="mysql-shell-的一些操作"><a href="#mysql-shell-的一些操作" class="headerlink" title="mysql shell 的一些操作"></a>mysql shell 的一些操作</h4><h5 id="显示数据库"><a href="#显示数据库" class="headerlink" title="显示数据库"></a>显示数据库</h5><p><code>show databases;</code></p><h5 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h5><p><code>exit;</code></p><h5 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h5><p><code>vim /etc/mysql/mysql.conf.d/mysqld.cnf</code></p><blockquote><p>修改其中的 <strong>bind-address</strong> 配置，将IP改为<strong>0.0.0.0</strong></p></blockquote><h5 id="重启mysql"><a href="#重启mysql" class="headerlink" title="重启mysql"></a>重启mysql</h5><p><code>sudo service mysql restart</code></p><h5 id="修改用户权限"><a href="#修改用户权限" class="headerlink" title="修改用户权限"></a>修改用户权限</h5><p><code>GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;root&#39; WITH GR ANT OPTION;</code></p><p>刷新用户权限</p><p><code>flush privileges;</code></p><h5 id="字符集及排序规则"><a href="#字符集及排序规则" class="headerlink" title="字符集及排序规则"></a>字符集及排序规则</h5><p> 使用 <code>utf8 -- UTF-8 Unicode</code> 以及 <code>utf8_general_ci</code></p><h3 id="安装python（Linux）"><a href="#安装python（Linux）" class="headerlink" title="安装python（Linux）"></a>安装python（Linux）</h3><blockquote><p>安装的时候可以使用 python 豆瓣镜像 <code>-i https://pypi.douban.com/simple</code></p></blockquote><h4 id="获取python3版本"><a href="#获取python3版本" class="headerlink" title="获取python3版本"></a>获取python3版本</h4><p><code>sudo apt-get install python3.5</code></p><h4 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p><code>sudo apt-get install python-virtualenv</code></p><h5 id="使用虚拟环境"><a href="#使用虚拟环境" class="headerlink" title="使用虚拟环境"></a>使用虚拟环境</h5><p><code>virtualenv py2_env</code></p><blockquote><p>会创建目录为py2_env的文件夹在该目录下</p><p>ps: 移除文件夹 <code>rm -r py2_env/</code>或 <code>rm -f py2_env</code>移除文件，慎用<code>rm -rf py2_env</code></p></blockquote><h5 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title="进入虚拟环境"></a>进入虚拟环境</h5><p><code>source py2_env/bin/activate</code></p><h5 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title="退出虚拟环境"></a>退出虚拟环境</h5><p><code>deactivate</code></p><h5 id="创建python3的虚拟环境"><a href="#创建python3的虚拟环境" class="headerlink" title="创建python3的虚拟环境"></a>创建python3的虚拟环境</h5><p><code>virtualenv -p python3 py3_env</code></p><h5 id="安装pip3版本"><a href="#安装pip3版本" class="headerlink" title="安装pip3版本"></a>安装pip3版本</h5><p><code>sudo apt-get install python3-pip</code></p><blockquote><p>遇到 “OSError: Command /home/ubuntu/Myvirtualenv/py2_env/bin/python2 - setuptools pkg_resources pip wheel failed with error code 1”这个问题，解决方法：</p><ol><li><code>export LC_ALL=&quot;en_US.UTF-8&quot;</code></li><li><code>export LC_CTYPE=&quot;en_US.UTF-8&quot;</code></li><li><code>pip install setuptools</code></li></ol><p>参考： <a href="https://github.com/certbot/certbot/issues/2883" target="_blank" rel="noopener">setuptools pkg_resources pip wheel failed with error code 1</a></p></blockquote><h5 id="更新pip版本"><a href="#更新pip版本" class="headerlink" title="更新pip版本"></a>更新pip版本</h5><p><code>pip install --upgrade pip</code></p><h4 id="虚拟环境管理"><a href="#虚拟环境管理" class="headerlink" title="虚拟环境管理"></a>虚拟环境管理</h4><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><p><code>pip install virtualenvwrapper</code></p><h5 id="查找路径"><a href="#查找路径" class="headerlink" title="查找路径"></a>查找路径</h5><p><code>sudo find / -name virtualenvwrapper.sh</code></p><blockquote><p>/home/ubuntu/.local/bin/virtualenvwrapper.sh</p></blockquote><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><ol><li>进入<code>vim ~/.bashrc</code></li><li>在最后一行添加</li></ol><blockquote><p>export WORKON_HOME=$HOME/.virtualenvs<br>source /home/ubuntu/.local/bin/virtualenvwrapper.sh</p></blockquote><ol><li>ESC <code>:wq</code>保存</li><li><code>source ~/.bashrc</code> 运行生效</li></ol><h5 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h5><p><code>mkvirtualenv py2_workon_env</code></p><h5 id="目录安装所在地"><a href="#目录安装所在地" class="headerlink" title="目录安装所在地"></a>目录安装所在地</h5><p><code>cd ~/.virtualenvs</code></p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><ol><li><code>workon</code> 查找全部的虚拟目录</li><li><code>workon py2_workon_env</code> 使用该虚拟目录</li><li><code>deactivate</code> 退出虚拟环境</li></ol><h5 id="创建python3的虚拟环境-1"><a href="#创建python3的虚拟环境-1" class="headerlink" title="创建python3的虚拟环境"></a>创建python3的虚拟环境</h5><p><code>mkvirtualenv --python=python3 py3_workon_env</code></p><blockquote><p>ubuntu@VM-65-204-ubuntu:~$ workon<br>py2_workon_env<br>py3_workon_env</p></blockquote><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>参考：</p><ul><li><a href="https://nodejs.org/dist/v8.9.3/" target="_blank" rel="noopener">https://nodejs.org/dist/v8.9.3/</a></li><li><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">nodejs download</a></li><li><a href="https://cnodejs.org/topic/53a92af6c3ee0b58203258fe" target="_blank" rel="noopener">Linux（Ubuntu）下安装NodeJs</a></li><li><a href="https://cnodejs.org/topic/53cb1242c9507b40442875f6" target="_blank" rel="noopener">linux下安装nodejs+express(最新版)</a></li><li><a href="https://jingyan.baidu.com/article/cdddd41ca7b87853cb00e1af.html" target="_blank" rel="noopener">Linux下nodejs的安装配置</a></li></ul><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><ul><li><code>sudo apt-get install g++</code></li><li><code>sudo apt-get install libssl-dev</code></li><li><code>sudo apt-get install build-essential</code></li></ul><h4 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h4><p><code>wget https://nodejs.org/dist/v8.9.3/node-v8.9.3.tar.gz</code></p><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><p><code>tar zxvf node-v8.9.3.tar.gz</code></p><blockquote><p>移动文件 mv source_file new_file</p></blockquote><h4 id="编译文件"><a href="#编译文件" class="headerlink" title="编译文件"></a>编译文件</h4><ol><li>进入到<strong>node-v8.9.3</strong>文件里</li><li><code>./configure</code></li><li><code>make</code></li></ol><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><p><code>make install</code></p><h4 id="修改环境配置"><a href="#修改环境配置" class="headerlink" title="修改环境配置"></a>修改环境配置</h4><p>参考</p><h4 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h4><ul><li><code>sudo apt-get install nodejs-legacy</code></li><li><code>sudo apt-get install npm</code></li></ul><h4 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h4><p> <a href="https://npm.taobao.org" target="_blank" rel="noopener">淘宝 NPM 镜像</a></p><p>可以使用这个代替npm，国内镜像，下载速度可以更快</p><h3 id="安装htop"><a href="#安装htop" class="headerlink" title="安装htop"></a>安装htop</h3><p><code>sudo apt-get install htop</code></p><blockquote><p>可以查看系统运行的状态</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要下载的资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm-edu/download/#section=mac&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Pycharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/webstorm/download/#section=mac&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WebStorm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nodejs.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mysql.com/products/workbench/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mysql Workbench&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Django" scheme="http://jaelyn.coding.me/categories/Django/"/>
    
    
      <category term="Django" scheme="http://jaelyn.coding.me/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Httpie</title>
    <link href="http://jaelyn.coding.me/2018/02/08/httpie/"/>
    <id>http://jaelyn.coding.me/2018/02/08/httpie/</id>
    <published>2018-02-08T03:19:38.000Z</published>
    <updated>2018-02-08T03:23:44.552Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h3><ul><li>HTTPie （读aych-tee-tee-pie）是一个 HTTP 的命令行客户端。</li><li>其目标是让 CLI 和 web 服务之间的交互尽可能的人性化。</li><li>这个工具提供了简洁的 http 命令，允许通过自然的语法发送任意 HTTP 请求数据，展示色彩化的输出。</li><li>HTTPie 可用于与 HTTP 服务器做测试、调试和常规交互。<a id="more"></a></li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>直观的语法</li><li>格式化和色彩化的终端输出</li><li>内置 JSON 支持</li><li>支持上传表单和文件</li><li>HTTPS、代理和认证</li><li>任意请求数据</li><li>自定义头部</li><li>持久性会话</li><li>类 Wget 下载</li><li>支持 Python 2.6, 2.7 和 3.x</li><li>支持 Linux, Mac OS X 和 Windows</li><li>插件</li><li>文档</li><li>测试覆盖率</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>pip install httpie</code></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="http://blog.csdn.net/pzw_0612/article/details/46521965" target="_blank" rel="noopener">HTTPie 工具使用入门</a></li><li><a href="https://httpie.org/doc" target="_blank" rel="noopener">官方文档</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关于&quot;&gt;&lt;a href=&quot;#关于&quot; class=&quot;headerlink&quot; title=&quot;关于&quot;&gt;&lt;/a&gt;关于&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;HTTPie （读aych-tee-tee-pie）是一个 HTTP 的命令行客户端。&lt;/li&gt;
&lt;li&gt;其目标是让 CLI 和 web 服务之间的交互尽可能的人性化。&lt;/li&gt;
&lt;li&gt;这个工具提供了简洁的 http 命令，允许通过自然的语法发送任意 HTTP 请求数据，展示色彩化的输出。&lt;/li&gt;
&lt;li&gt;HTTPie 可用于与 HTTP 服务器做测试、调试和常规交互。
    
    </summary>
    
      <category term="工具集" scheme="http://jaelyn.coding.me/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="httpie" scheme="http://jaelyn.coding.me/tags/httpie/"/>
    
  </entry>
  
  <entry>
    <title>Byobu &quot;多窗口&quot;的Terminal</title>
    <link href="http://jaelyn.coding.me/2018/02/07/byobu/"/>
    <id>http://jaelyn.coding.me/2018/02/07/byobu/</id>
    <published>2018-02-07T01:52:59.000Z</published>
    <updated>2018-02-07T02:29:00.153Z</updated>
    
    <content type="html"><![CDATA[<link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 测试密码工具，密码是： lim "/> <label for="pass"> 测试密码工具，密码是： lim </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      Byobu是一个日本术语，用于装饰、多面板屏幕，可作为折叠室的分隔物。作为一个开源软件项目，Byobu是一种优雅的功能，它是一种简单的、实用的、实用的GNU屏幕。Byobu包括了一个增强的概要文件、配置实用程序和GNU屏幕窗口管理器的系统状态通知，以及Tmux终端多路复用器。Byobu是在GPLv3下开发和发布的免费软件。
    
    </summary>
    
      <category term="工具集" scheme="http://jaelyn.coding.me/categories/%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    
    
      <category term="byobu" scheme="http://jaelyn.coding.me/tags/byobu/"/>
    
  </entry>
  
  <entry>
    <title>Django 学习笔记—基础01</title>
    <link href="http://jaelyn.coding.me/2018/01/27/DjangoLearning1/"/>
    <id>http://jaelyn.coding.me/2018/01/27/DjangoLearning1/</id>
    <published>2018-01-27T05:50:16.000Z</published>
    <updated>2018-02-07T03:16:37.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://python.usyiyi.cn/translate/django_182/index.html" target="_blank" rel="noopener">Django 1.8.2中文文档</a></li><li><a href="https://docs.djangoproject.com/en/2.0/" target="_blank" rel="noopener">Django 2.0 官方文档</a></li><li><a href="https://code.ziqiangxuetang.com/django/django-tutorial.html" target="_blank" rel="noopener">Django 中文教学 自强学院</a></li></ul><a id="more"></a><h2 id="所需指令"><a href="#所需指令" class="headerlink" title="所需指令"></a>所需指令</h2><h3 id="用指令创建项目"><a href="#用指令创建项目" class="headerlink" title="用指令创建项目"></a>用指令创建项目</h3><p><code>django-admin startproject project</code></p><blockquote><p>一般不用，直接用pycharm创建就行</p></blockquote><h3 id="运行应用"><a href="#运行应用" class="headerlink" title="运行应用"></a>运行应用</h3><p><code>python manage.py runserver 8080</code></p><p>运行后，才能根据所生成的网址，访问服务器，后面填写服务器的端口</p><blockquote><p>也可以不写端口，如果没写端口，默认使用8000端口</p></blockquote><h3 id="创建一个应用"><a href="#创建一个应用" class="headerlink" title="创建一个应用"></a>创建一个应用</h3><p><code>python manage.py startapp djangoAppName(这里填写所需创建应用的名字)</code><br>或<br><code>django-admin startapp djangoAppName</code><br>可以直接在apps目录下创建</p><blockquote><p>有点类似于模块的意思，分模块开发项目，一个模块对应了view, model等内容，需要创建新的模块的时候，需要使用这个指令。</p></blockquote><h3 id="生成迁移（makemigrations）"><a href="#生成迁移（makemigrations）" class="headerlink" title="生成迁移（makemigrations）"></a>生成迁移（<code>makemigrations</code>）</h3><p>创建迁移文件</p><p><code>python manage.py makemigrations</code></p><blockquote><p> 创建之后，在所对应的<code>migrations</code>文件夹下面会多出一个<code>.py</code>文件</p></blockquote><p><strong>如果使用的是Django2.0 并且数据库model中使用了<code>ForeignKey</code>，需要在后面添加 <code>on_delete</code> 关键字</strong></p><blockquote><p>在使用这个命令的时候，需要在<code>settings.py</code>文件中的<code>INSTALLED_APPS</code>注册应用信息</p></blockquote><h3 id="执行迁移"><a href="#执行迁移" class="headerlink" title="执行迁移"></a>执行迁移</h3><p>根据迁移文件，形成sql语句，创建对应的表</p><p><code>python manage.py migrate</code></p><h3 id="创建超级管理员"><a href="#创建超级管理员" class="headerlink" title="创建超级管理员"></a>创建超级管理员</h3><p><code>python manage.py createsuperuser</code></p><p>接下来按照提示填写用户名、邮箱、密码</p><blockquote><p>后台URL: 在网址后面添加admin</p></blockquote><h3 id="显示所有的指令"><a href="#显示所有的指令" class="headerlink" title="显示所有的指令"></a>显示所有的指令</h3><p><code>python manage.py</code></p><p>会显示所有的指令，并且在后面输入<code>help name</code>就可以查看对应指令的具体信息</p><h2 id="Model创建"><a href="#Model创建" class="headerlink" title="Model创建"></a>Model创建</h2><ul><li>在对应的模版项目下的<code>models.py</code>文件下创建数据库模型文件</li><li>创建模型的时候不用创建主键id，系统会自动生成这个主键的列</li></ul><h3 id="Models-py"><a href="#Models-py" class="headerlink" title="Models.py"></a>Models.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelName1</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    title = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    date = models.DateTimeField()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'title name is &#123;&#125;, crate at &#123;&#125;'</span>.format(self.title, self.date)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelName2</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    hname = models.CharField(max_length=<span class="number">10</span>)</span><br><span class="line">    hgender = models.BooleanField()</span><br><span class="line">    content = models.CharField(max_length=<span class="number">1000</span>)</span><br><span class="line">    modelName1ForeignKey = models.ForeignKey(ModelName1, on_delete=models.CASCADE) <span class="comment">#外键</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gender</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.hgender:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'男'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'女'</span></span><br><span class="line"></span><br><span class="line">    gender.short_description = <span class="string">'性别'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.hname</span><br><span class="line"></span><br><span class="line">    name.short_description = <span class="string">'名字'</span></span><br></pre></td></tr></table></figure><h3 id="Django2-0-ForeignKey-变化"><a href="#Django2-0-ForeignKey-变化" class="headerlink" title="Django2.0 ForeignKey 变化"></a>Django2.0 ForeignKey 变化</h3><p>在创建外键的时候遇到报错：</p><p><code>TypeError: __init__() missing 1 required positional argument: &#39;on_delete&#39;</code></p><p>查询一番后发现Django2.0版本创建外键时需要在后面加上<strong>on_delete</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    manufacturer = models.ForeignKey(</span><br><span class="line">        <span class="string">'Manufacturer'</span>,</span><br><span class="line">        on_delete=models.CASCADE,</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h2 id="站点管理"><a href="#站点管理" class="headerlink" title="站点管理"></a>站点管理</h2><h3 id="界面本地化"><a href="#界面本地化" class="headerlink" title="界面本地化"></a>界面本地化</h3><p>修改<code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = <span class="string">'zh-Hans'</span></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure><blockquote><p>修改语言和时区</p></blockquote><h3 id="向admin中注册应用"><a href="#向admin中注册应用" class="headerlink" title="向admin中注册应用"></a>向admin中注册应用</h3><p>在 <strong>booktest/admin.py</strong> 文件，注册模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> models <span class="keyword">import</span> ModelName</span><br><span class="line">admin.site.register(ModelName)</span><br></pre></td></tr></table></figure><ol><li>导入<strong>model</strong> 类</li><li>在admin中注册该模型类 <code>admin.site.register(ModelName)</code></li></ol><h3 id="自定义管理页面"><a href="#自定义管理页面" class="headerlink" title="自定义管理页面"></a>自定义管理页面</h3><ul><li>Django提供了admin.ModelAdmin类</li><li>通过定义ModelAdmin的子类，来定义模型在Admin界面的显示方式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelNameAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'date'</span>]</span><br><span class="line">    list_filter = [<span class="string">'title'</span>]</span><br><span class="line">    search_fields = [<span class="string">'title'</span>]</span><br><span class="line">    list_per_page = <span class="number">10</span></span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="string">'base'</span>,&#123;<span class="string">'fields'</span>:[<span class="string">'title'</span>]&#125;),</span><br><span class="line">        (<span class="string">'super'</span>,&#123;<span class="string">'fields'</span>:[<span class="string">'date'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">admin.site.register(BookInfo, BookInfoAdmin)</span><br></pre></td></tr></table></figure><h4 id="列表页属性"><a href="#列表页属性" class="headerlink" title="列表页属性"></a>列表页属性</h4><h5 id="list-display"><a href="#list-display" class="headerlink" title="list_display"></a>list_display</h5><ul><li>显示字段，可以点击列头进行排序</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_display = [<span class="string">'pk'</span>, <span class="string">'title'</span>, <span class="string">'date'</span>]</span><br></pre></td></tr></table></figure><blockquote><p>列表里面填写的是字段的列表名字，表示要在后台页面中显示什么列表字段，先后顺序决定显示顺序</p></blockquote><h5 id="list-filter"><a href="#list-filter" class="headerlink" title="list_filter"></a>list_filter</h5><ul><li>过滤字段，过滤框会出现在右侧</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_filter = [<span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><h5 id="search-fields"><a href="#search-fields" class="headerlink" title="search_fields"></a>search_fields</h5><ul><li>搜索字段，搜索框会出现在上侧</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search_fields = [<span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><blockquote><p>支持模糊查询，根据列表中的字段进行查询</p></blockquote><h5 id="list-per-page"><a href="#list-per-page" class="headerlink" title="list_per_page"></a>list_per_page</h5><ul><li>分页，分页框会出现在下侧</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_per_page = <span class="number">10</span></span><br></pre></td></tr></table></figure><h4 id="添加、修改页属性"><a href="#添加、修改页属性" class="headerlink" title="添加、修改页属性"></a>添加、修改页属性</h4><h5 id="fields"><a href="#fields" class="headerlink" title="fields"></a>fields</h5><ul><li>属性的先后顺序</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fields = [<span class="string">'date'</span>, <span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><h5 id="fieldsets"><a href="#fieldsets" class="headerlink" title="fieldsets"></a>fieldsets</h5><ul><li>属性分组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fieldsets = [</span><br><span class="line">    (<span class="string">'basic'</span>,&#123;<span class="string">'fields'</span>: [<span class="string">'title'</span>]&#125;),</span><br><span class="line">    (<span class="string">'more'</span>, &#123;<span class="string">'fields'</span>: [<span class="string">'date'</span>]&#125;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="关联对象"><a href="#关联对象" class="headerlink" title="关联对象"></a>关联对象</h3><ul><li>对于模型类，有两种注册方式<ul><li>方式一：与传统模型类相同</li><li>方式二：关联注册</li></ul></li><li>按照BookInfor的注册方式完成HeroInfo的注册</li><li>接下来实现关联注册</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># StackedInline TabularInline</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelName2Line</span><span class="params">(admin.TabularInline)</span>:</span></span><br><span class="line">    model = HeroInfo</span><br><span class="line">    extra = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelName1Admin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'date'</span>]</span><br><span class="line">    list_filter = [<span class="string">'title'</span>]</span><br><span class="line">    search_fields = [<span class="string">'title'</span>]</span><br><span class="line">    list_per_page = <span class="number">10</span></span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="string">'base'</span>, &#123;<span class="string">'fields'</span>: [<span class="string">'title'</span>]&#125;),</span><br><span class="line">        (<span class="string">'super'</span>, &#123;<span class="string">'fields'</span>: [<span class="string">'date'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">    inlines = [ModelName2Line]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelName2Admin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'id'</span>, <span class="string">'name'</span>, <span class="string">'gender'</span>, <span class="string">'content'</span>, <span class="string">'modelName1ForeignKey'</span>]</span><br><span class="line">    list_filter = [<span class="string">'hgender'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">admin.site.register(ModelName1, ModelName1Admin)</span><br><span class="line">admin.site.register(ModelName2, ModelName2Admin)</span><br></pre></td></tr></table></figure><ul><li>可以将内嵌的方式改为表格</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelName2Line</span><span class="params">(admin.TabularInline)</span></span></span><br></pre></td></tr></table></figure><h3 id="布尔值的显示"><a href="#布尔值的显示" class="headerlink" title="布尔值的显示"></a>布尔值的显示</h3><ul><li>发布性别的显示不是一个直观的结果，可以使用方法进行封装</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gender</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.hgender:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'男'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'女'</span></span><br><span class="line">gender.short_description = <span class="string">'性别'</span></span><br></pre></td></tr></table></figure><ul><li>在admin注册中使用gender代替hgender</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelName2Admin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'id'</span>, <span class="string">'name'</span>, <span class="string">'gender'</span>, <span class="string">'content'</span>]</span><br></pre></td></tr></table></figure><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><ul><li>在django中，视图对WEB请求进行回应</li><li>视图接收reqeust对象作为第一个参数，包含了请求的信息</li><li>视图就是一个Python函数，被定义在views.py中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"index"</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(request,id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"detail %s"</span> % id)</span><br></pre></td></tr></table></figure><ul><li>定义完成视图后，需要配置<code>urls.py</code>，否则无法处理请求</li></ul><h3 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> DjangoLearn1 <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">''</span>,views.index)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>此时，就可以访问了，不过考虑到如果这样填写，模块一多，URL的量一大的话，就会出现多个路由，不方便配置，所以推荐如下</p></blockquote><ul><li>在对应模块里面创建一个 urls.py 的文件，将路由信息写到里面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index, name=<span class="string">'index'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>之后，在向主urls.py文件中include进去</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> include, path</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, include(<span class="string">'DjangoLearn1.urls'</span>)),</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><ul><li><p>模板是html页面，可以根据视图中传递的数据填充值</p></li><li><p>在模板中访问视图传递的数据</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; 输出值，可以是变量，也可以是对象.属性 &#125;&#125;</span><br><span class="line">&#123;% 执行代码段 %&#125;</span><br></pre></td></tr></table></figure><h3 id="定义HTML模板"><a href="#定义HTML模板" class="headerlink" title="定义HTML模板"></a>定义HTML模板</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;%for ModeleName1 in ModeleName1List%&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;ModeleName1.id&#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123;ModeleName1.title&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;%endfor%&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在模板中访问对象成员时，都以属性的方式访问，即方法也不能加括号</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>详细<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;ModeleName1.title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  &#123;%for Modele in ModeleName1.ModelName2_set.all%&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;Modele.name&#125;&#125;---&#123;&#123;Modele.content&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  &#123;%endfor%&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用模板"><a href="#使用模板" class="headerlink" title="使用模板"></a>使用模板</h3><ul><li>编辑views.py文件，在方法中调用模板</li><li>Django提供了函数Render()简化视图调用模板、构造上下文</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> models <span class="keyword">import</span> ModeleName1</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(reqeust)</span>:</span></span><br><span class="line">    ModeleName1List = ModeleName1.objects.all()</span><br><span class="line">    <span class="keyword">return</span> render(reqeust, <span class="string">'booktest/index.html'</span>, &#123;<span class="string">'ModeleName1List'</span>: ModeleName1List&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(reqeust, id)</span>:</span></span><br><span class="line">    ModeleName1 = ModeleName1.objects.get(pk=id)</span><br><span class="line">    <span class="keyword">return</span> render(reqeust, <span class="string">'booktest/detail.html'</span>, &#123;<span class="string">'ModeleName1'</span>: ModeleName1&#125;)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>视图 Views： 接受请求，逻辑处理，调用数据，输出响应</li><li>配置ulr在自己的应用中匹配url</li><li>模型Model：负责与数据库交互</li><li>面向对象：模型对象，列表</li><li>定义模型类：指出属性及类型，以确定表的结构，迁移</li><li>后台管理：创建管理员，启动服务器，admin，注册admin.py</li><li>模版：定义显示的样子<ol><li>加载：读取文件内容到内存</li><li>渲染：填内容</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://python.usyiyi.cn/translate/django_182/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Django 1.8.2中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/2.0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Django 2.0 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.ziqiangxuetang.com/django/django-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Django 中文教学 自强学院&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Django" scheme="http://jaelyn.coding.me/categories/Django/"/>
    
    
      <category term="Django" scheme="http://jaelyn.coding.me/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + nexT 学习笔记</title>
    <link href="http://jaelyn.coding.me/2017/12/29/hexoleraningnote/"/>
    <id>http://jaelyn.coding.me/2017/12/29/hexoleraningnote/</id>
    <published>2017-12-29T05:40:19.000Z</published>
    <updated>2018-02-07T02:33:06.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://jaelyn-blog-txcos-1253450780.cos.ap-guangzhou.myqcloud.com/blog/pageimage2018/hexo-head.jpeg" alt="hexo-head"></p><blockquote><ul><li>本文内容主要是个人在学习hexo和next中所遇到的一些“坑”和解决方法,而详细的流程网上有很多，在文章的结尾我会贴出我在学习中查找到的比较好的文章。 </li><li>注意本文不是详细操作步骤，如果需要详细步骤，请直接翻到文章结尾。</li></ul></blockquote><a id="more"></a><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">nexT</a></li></ul><h2 id="Hexo-和-nexT-的安装"><a href="#Hexo-和-nexT-的安装" class="headerlink" title="Hexo 和 nexT 的安装"></a>Hexo 和 nexT 的安装</h2><blockquote><p>在安装 Hexo 之前，需要确保电脑环境要有 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a> 和 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a> 环境, 当然，为了更好的安装 Hexo 还需要 <a href="https://www.npmjs.com" target="_blank" rel="noopener">npm</a>.</p></blockquote><p>下面是我所使用的版本：<br><img src="https://jaelyn-blog-txcos-1253450780.cos.ap-guangzhou.myqcloud.com/blog/pageimage2018/gitnpmnodeversion.png" alt="gitnpmnodeversion"></p><p>安装之后，最常使用的指令如下：  </p><ol><li><p>生成静态页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></li><li><p>在本地运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>部署到GitHub pages（coding）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>清除生成的静态文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li></ol><h2 id="打开-GitHub-Pages"><a href="#打开-GitHub-Pages" class="headerlink" title="打开 GitHub Pages"></a>打开 GitHub Pages</h2><p>在第一次创建完仓库之后，打开settings选项，向下翻到GitHub Pages选项会发现不能打开，会有一个提示信息：</p><blockquote><p>GitHub Pages is currently disabled. You must first add content to your repository before you can publish a GitHub Pages site  </p></blockquote><p>是因为该GitHub Pages没有内容，此时只要点击下面的Choose a theme按钮选择一个主题就可以打开和访问了。</p><h2 id="SSH-配置"><a href="#SSH-配置" class="headerlink" title="SSH 配置"></a>SSH 配置</h2><p>先查看本机用户home目录下是否存在.ssh目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br></pre></td></tr></table></figure></p><p>如果有就不用再创建了，如果想重新创建，可以创建一个不同名字的，也可以将原来的删除，再创建。<br>使用下面指令删除已存在的SSH：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D</span><br><span class="line">rm -r ~/.ssh</span><br></pre></td></tr></table></figure></p><p>再创建新的SSH密钥(keys)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure></p><blockquote><p>这将按照你提供的邮箱地址，创建一对密钥  </p></blockquote><p>将生成的<code>id_rsa.pub</code>文件里面的内容拷贝到GitHub 项目中添加公钥，这里推荐在对应 xxx.github.io 项目中加。（settings-&gt;deploy keys）  </p><p>最后再用下面指令测试是否连接成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><blockquote><p>可参考<a href="https://www.zhihu.com/question/21402411" target="_blank" rel="noopener">github提示Permission denied (publickey)，如何才能解决？</a></p></blockquote><h2 id="同步到GitHub"><a href="#同步到GitHub" class="headerlink" title="同步到GitHub"></a>同步到GitHub</h2><p>配置<code>站点文件</code>下的<code>_config.xml</code>文件下的<code>deploy</code>信息。  </p><p>安装<code>hexo-deployer-git</code>插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><blockquote><p>关于 https 的问题，如果需要使用自己的域名的话，GitHub pages 是不能打开 Enforce HTTPS 的。所以在配置<code>deploy</code>信息的时候就推荐使用 Clone with SSH 的链接。</p></blockquote><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>在source文件夹下面创建<code>CNAME</code>文件（没有后缀），里面填上自己的域名。<br>之后在自己的域名商将自己的域名用<code>CNAME</code>方式指向自己GitHub pages的域名。<br><img src="https://jaelyn-blog-txcos-1253450780.cos.ap-guangzhou.myqcloud.com/blog/pageimage2018/cname-dns.png" alt="cname-dns"></p><blockquote><p>个人使用的是<a href="https://cloud.tencent.com" target="_blank" rel="noopener">腾讯云</a></p></blockquote><p>最后需要注意，需要在<code>站点文件</code>的<code>_config.xml</code>文件配置中的<code>skip_render</code>添加:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">skip_render:</span><br><span class="line"> - CNAME</span><br></pre></td></tr></table></figure></p><p>表示跳过该文件的渲染。</p><h2 id="nexT-主题配置"><a href="#nexT-主题配置" class="headerlink" title="nexT 主题配置"></a>nexT 主题配置</h2><p>一些我觉得比较实用的效果，参考<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a>.</p><h3 id="添加-README-md"><a href="#添加-README-md" class="headerlink" title="添加 README.md"></a>添加 README.md</h3><p> 在<code>站点文件</code>的<code>source</code>目录下添加一个<code>README.md</code>文件，之后修改<code>站点文件</code>下的<code>_config.xml</code>，将<code>skip_render</code>添加<code>README.md</code>，跳过该文件的渲染。<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">skip_render:</span><br><span class="line"> - CNAME</span><br><span class="line"> - README.md</span><br></pre></td></tr></table></figure></p><h3 id="Schemes"><a href="#Schemes" class="headerlink" title="Schemes"></a>Schemes</h3><p>个人比较喜欢<code>Gemini</code>样式，相比<code>Pisces</code>样式，该样式不会每篇文章相连过于紧密，会以分块的形式显示出来，比较好看，特别在手机端上效果更显著。具体可以亲自去设置去看看效果。</p><h3 id="live2d"><a href="#live2d" class="headerlink" title="live2d"></a>live2d</h3><p>就是网站右下角的“萌物”小人，具体可以参考<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">hexo-helper-live2d</a>。下面简要介绍我的做法：</p><ol><li><p>在<code>站点文件</code>打开终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li><li><p>在<code>站点文件</code>下的<code>_config.xml</code>最后配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  model: z16</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>具体的配置可以看文档，可以修改挺多内容的。模型外观参考<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">截图预览</a>.</p></blockquote><h3 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h3><p>在<code>主题文件</code>的<code>_config.xml</code>中搜索<code>Canvas-nest</code>可以发现有4个动态背景，可以逐个尝试，也可以同时设置为<code>true</code>，个人只选择了<code>Canvas-nest</code>。</p><h3 id="footer"><a href="#footer" class="headerlink" title="footer"></a>footer</h3><p>可以将网站最下的不想要显示的内容设置为<code>false</code>，在<code>主题文件</code>的<code>_config.xml</code>中搜索<code>footer</code>，我的设置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  since: 2017</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon: user</span><br><span class="line"></span><br><span class="line">  # If not defined, will be used `author` from Hexo main config.</span><br><span class="line">  copyright:</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Hexo link (Powered by Hexo).</span><br><span class="line">  powered: false</span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: false</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: false</span><br></pre></td></tr></table></figure></p><h3 id="busuanzi访问人数"><a href="#busuanzi访问人数" class="headerlink" title="busuanzi访问人数"></a>busuanzi访问人数</h3><p>在<code>主题文件</code>的<code>_config.xml</code>中搜索<code>busuanzi_count</code>，修改配置，可以在网站底部和文章中显示访问的人数，我的配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; 访问人数</span><br><span class="line">  site_uv_footer: |</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; 访问总量</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; 阅读次数</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure></p><h3 id="显示统计字数"><a href="#显示统计字数" class="headerlink" title="显示统计字数"></a>显示统计字数</h3><p>在<code>主题文件</code>的<code>_config.xml</code>中搜索<code>post_wordcount</code>，修改配置，可以在网站底部和文章中显示所统计的字数，我的配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  totalcount: true</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure></p><h3 id="增加本地搜索功能"><a href="#增加本地搜索功能" class="headerlink" title="增加本地搜索功能"></a>增加本地搜索功能</h3><p>在<code>主题文件</code>的<code>_config.xml</code>中搜索<code>local_search</code>，设置为<code>true</code>。</p><h3 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h3><p>在<code>主题文件</code>的<code>_config.xml</code>中搜索<code>post_copyright</code>，设置为<code>true</code>。</p><h3 id="给文章加密"><a href="#给文章加密" class="headerlink" title="给文章加密"></a>给文章加密</h3><p>参考： <a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">hexo-blog-encrypt</a></p><ul><li>安装： <code>npm install hexo-blog-encrypt</code>  </li><li>首先在 _config.yml 中启用该插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Security</span><br><span class="line">##</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br><span class="line">```  </span><br><span class="line">- 在你的文章的头部添加上对应的字段，如 password, abstract, message</span><br></pre></td></tr></table></figure></li></ul><hr><p>title: hello world<br>date: 2016-03-30 21:18:02<br>tags:</p><pre><code>- fdsafsdaf</code></pre><p>password: Mike<br>abstract: Welcome to my blog, enter password to read.</p><h2 id="message-Welcome-to-my-blog-enter-password-to-read"><a href="#message-Welcome-to-my-blog-enter-password-to-read" class="headerlink" title="message: Welcome to my blog, enter password to read."></a>message: Welcome to my blog, enter password to read.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 写文章</span><br><span class="line">一般使用</span><br><span class="line">```code</span><br><span class="line">hexo new xxx</span><br></pre></td></tr></table></figure><blockquote><p>xxx表示文件的名字，同时也会自动设置为文章标题（后面可改）<br>也可以之间创建<code>.md</code>文件，添加文章头信息：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title:  // 文章标题</span><br><span class="line">date: // 创建时间</span><br><span class="line">updated: //跟新文章的时间</span><br><span class="line">tags: // 文章的标签，如果有多个，[tags1, tags2, ...]</span><br><span class="line">categories: // 文章分类</span><br><span class="line">keywords: // 文章关键词，如果有多个，[key1, key2, ...]</span><br><span class="line">description: //文章描述</span><br></pre></td></tr></table></figure><p>其中需要注意：</p><ul><li><p>如果想要有<code>updated</code>，需要在<code>主题文件</code>下的<code>_config.xml</code>文件中配置<code>post_meta</code>，将<code>updated_at</code>设置为<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at: true</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure></li><li><p><code>keywords</code>和<code>description</code>的作用是为了搜索引擎寻找关键字。</p><blockquote><p>其中<code>description</code>关键字，在主页上显示的时候就会显示这里面的内容，而不是显示前150个字符。还有另一种方法推荐，就是不写<code>description</code>，而是在文章中插入<code>&lt;!-- more --&gt;</code>注释，这样主页就会显示该注释前的内容。</p></blockquote></li></ul><h2 id="可添加内容"><a href="#可添加内容" class="headerlink" title="可添加内容"></a>可添加内容</h2><p>下面的内容是推广和维护网站相关。</p><h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><p> 个人使用的是<a href="http://mta.qq.com" target="_blank" rel="noopener">腾讯移动分析</a>，而且nexT也可以直接支持，在<code>主题文件</code>的<code>_config.xml</code>中搜索<code>Tencent MTA ID</code>，将自己在网站上注册的 ID 填写上去就可以统计了。</p><h3 id="seo推广"><a href="#seo推广" class="headerlink" title="seo推广"></a>seo推广</h3><p> 这里推荐参考<a href="http://harleywang93.com/2017/03/07/Hexo-GitHub-Coding-Pages-搭建博客/" target="_blank" rel="noopener">Hexo+nexT主题搭建个人博客</a>中seo推广部分。</p><blockquote><p>参考<a href="http://ziyuan.baidu.com" target="_blank" rel="noopener">百度搜索资源平台</a></p></blockquote><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ul><li><a href="http://www.wuxubj.cn/2016/08/Hexo-nexT-build-personal-blog/index.html" target="_blank" rel="noopener">Hexo+nexT主题搭建个人博客</a></li><li><a href="https://www.jianshu.com/p/e7c58f57f60e" target="_blank" rel="noopener">hexo初探—让写作飞起来</a></li><li><a href="https://xuanwo.org/2015/03/26/hexo-intor/" target="_blank" rel="noopener">史上最详细的Hexo博客搭建图文教程</a></li><li><a href="http://harleywang93.com/2017/03/07/Hexo-GitHub-Coding-Pages-搭建博客/" target="_blank" rel="noopener">Hexo + GitHub (Coding) Pages 搭建博客</a></li><li><a href="http://col.dog/2015/11/12/hello-world/" target="_blank" rel="noopener">基于 Hexo 和 GitHub Pages 搭建博客</a></li><li><a href="http://blog.csdn.net/xiaoliuge01/article/details/50997754" target="_blank" rel="noopener">Hexo搭建独立博客，托管到Github和Coding上教程</a></li><li><a href="http://blog.junyu.io/posts/0008-blog-seo.html" target="_blank" rel="noopener">让更多人看到你的博客</a></li><li><a href="http://blog.csdn.net/qq_21165007/article/details/72587999#git报错warning-lf-will-be-replaced-by-crlf问题" target="_blank" rel="noopener">在github上搭建个人网站</a></li><li><a href="https://www.zhihu.com/question/30898326" target="_blank" rel="noopener">如何解决百度爬虫无法爬取搭建在Github上的个人博客的问题？</a></li><li><a href="http://blog.niices.com/Hexo-Next-Algolia-Search/" target="_blank" rel="noopener">Hexo+Next主题集成Algolia搜索</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://jaelyn-blog-txcos-1253450780.cos.ap-guangzhou.myqcloud.com/blog/pageimage2018/hexo-head.jpeg&quot; alt=&quot;hexo-head&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;本文内容主要是个人在学习hexo和next中所遇到的一些“坑”和解决方法,而详细的流程网上有很多，在文章的结尾我会贴出我在学习中查找到的比较好的文章。 &lt;/li&gt;
&lt;li&gt;注意本文不是详细操作步骤，如果需要详细步骤，请直接翻到文章结尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博客技术" scheme="http://jaelyn.coding.me/categories/%E5%8D%9A%E5%AE%A2%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="http://jaelyn.coding.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>今天算是把我的博客网站建立起来了</title>
    <link href="http://jaelyn.coding.me/2017/12/27/hellomyblog/"/>
    <id>http://jaelyn.coding.me/2017/12/27/hellomyblog/</id>
    <published>2017-12-27T10:56:40.000Z</published>
    <updated>2017-12-31T10:02:47.282Z</updated>
    
    <content type="html"><![CDATA[<p>花了三天时间，终于搞定了，这也表示我的文章之旅要开始了。<br>enjoy it !</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;花了三天时间，终于搞定了，这也表示我的文章之旅要开始了。&lt;br&gt;enjoy it !&lt;/p&gt;
    
    </summary>
    
      <category term="diary" scheme="http://jaelyn.coding.me/categories/diary/"/>
    
    
      <category term="diary" scheme="http://jaelyn.coding.me/tags/diary/"/>
    
  </entry>
  
</feed>
